{"version":3,"sources":["file:///D:/Tower-Run/Tower-Run/assets/Scripts/Player.ts"],"names":["_decorator","Component","BoxCollider","director","find","SkeletalAnimation","GameManager","ccclass","property","Player","start","playerAnim","node","getComponent","play","on","GameState","GAME_OVER","CHECK_POINT","collider","_onCollisionEnter","scheduleOnce","_checkPointNode","update","dt","getWorldPosition","y","_isGameOver","_gameOver","event","otherCollider","name","isChildOf","emit","InGameState","STOP_MOVING"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,W,OAAAA,W;AAAiCC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,iB,OAAAA,iB;;AAC9EC,MAAAA,W,gBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;wBAGjBS,M,WADZF,OAAO,CAAC,QAAD,C,yBAAR,MACaE,MADb,SAC4BR,SAD5B,CACsC;AAAA;AAAA;;AAAA,mDAEF,IAFE;;AAAA,+CAGH,KAHG;AAAA;;AAKlCS,QAAAA,KAAK,GAAI;AACL,gBAAMC,UAAU,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBR,iBAAvB,CAAnB;AACAM,UAAAA,UAAU,CAACG,IAAX,CAAgB,UAAhB;AAEAX,UAAAA,QAAQ,CAACY,EAAT,CAAY;AAAA;AAAA,0CAAYC,SAAZ,CAAsBC,SAAlC,EAA6C,MAAM;AAC/CN,YAAAA,UAAU,CAACG,IAAX,CAAgB,WAAhB;AACH,WAFD,EAEG,IAFH;AAGAX,UAAAA,QAAQ,CAACY,EAAT,CAAY;AAAA;AAAA,0CAAYC,SAAZ,CAAsBE,WAAlC,EAA+C,MAAM;AACjDP,YAAAA,UAAU,CAACG,IAAX,CAAgB,WAAhB;AACH,WAFD,EAEG,IAFH;AAIA,cAAIK,QAAQ,GAAG,KAAKP,IAAL,CAAUC,YAAV,CAAuBX,WAAvB,CAAf;AACAiB,UAAAA,QAAQ,CAACJ,EAAT,CAAY,kBAAZ,EAAgC,KAAKK,iBAArC,EAAwD,IAAxD,EAZK,CAcL;;AACA,eAAKC,YAAL,CAAkB,MAAM;AACpB,iBAAKC,eAAL,GAAuBlB,IAAI,CAAC,mBAAD,CAA3B;AACH,WAFD,EAEG,CAFH;AAGH;;AAGDmB,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf;AACA,cAAI,KAAKZ,IAAL,CAAUa,gBAAV,GAA6BC,CAA7B,GAAiC,CAAjC,IAAsC,CAAC,KAAKC,WAAhD,EAA6D;AACzD,iBAAKC,SAAL;AACH;AACJ;;AAGOR,QAAAA,iBAAiB,CAACS,KAAD,EAAuB;AAC3C;AACD,cAAIA,KAAK,CAACC,aAAN,CAAoBC,IAApB,KAA6B,oBAA7B,IAAqD,CAAC,KAAKJ,WAA/D,EAA4E;AACxE,iBAAKC,SAAL,GADwE,CAG5E;;AACC,WAJD,MAIO,IAAIC,KAAK,CAACC,aAAN,CAAoBC,IAApB,KAA6B,2BAA7B,IAA4D,CAAC,KAAKJ,WAAtE,EAAmF;AACtF,gBAAIE,KAAK,CAACC,aAAN,CAAoBlB,IAApB,CAAyBoB,SAAzB,CAAmC,KAAKV,eAAxC,CAAJ,EAA8D;AAC1D;AACH;;AACD,iBAAKM,SAAL;AACH;AACJ;;AAGOA,QAAAA,SAAS,GAAG;AAChB,eAAKD,WAAL,GAAmB,IAAnB;AACAxB,UAAAA,QAAQ,CAAC8B,IAAT,CAAc;AAAA;AAAA,0CAAYC,WAAZ,CAAwBC,WAAtC;AACAhC,UAAAA,QAAQ,CAAC8B,IAAT,CAAc;AAAA;AAAA,0CAAYjB,SAAZ,CAAsBC,SAApC;AACH;;AArDiC,O","sourcesContent":["\r\nimport { _decorator, Component, Node, BoxCollider, ITriggerEvent, log, director, find, SkeletalAnimation } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Player')\r\nexport class Player extends Component {\r\n    \r\n    private _checkPointNode: Node = null!\r\n    private _isGameOver: boolean = false\r\n\r\n    start () {\r\n        const playerAnim = this.node.getComponent(SkeletalAnimation)!\r\n        playerAnim.play('Root|Run')\r\n\r\n        director.on(GameManager.GameState.GAME_OVER, () => {\r\n            playerAnim.play('Root|Idle')\r\n        }, this)\r\n        director.on(GameManager.GameState.CHECK_POINT, () => {\r\n            playerAnim.play('Root|Idle')\r\n        }, this)\r\n\r\n        let collider = this.node.getComponent(BoxCollider)!\r\n        collider.on('onCollisionEnter', this._onCollisionEnter, this)\r\n\r\n        // 延迟 2 秒等检查点预制加载完\r\n        this.scheduleOnce(() => {\r\n            this._checkPointNode = find('Models/CheckPoint')!\r\n        }, 2)\r\n    }\r\n\r\n\r\n    update(dt: number) {\r\n        // 小人掉下桥，游戏结束\r\n        if (this.node.getWorldPosition().y < 0 && !this._isGameOver) {\r\n            this._gameOver()\r\n        }\r\n    }\r\n\r\n\r\n    private _onCollisionEnter(event: ITriggerEvent) {\r\n         // 小人碰撞到木箱，游戏结束\r\n        if (event.otherCollider.name === 'crate<BoxCollider>' && !this._isGameOver) {\r\n            this._gameOver()\r\n\r\n        // 小人碰撞到桥，游戏结束\r\n        } else if (event.otherCollider.name === 'bridge_1_row<BoxCollider>' && !this._isGameOver) {\r\n            if (event.otherCollider.node.isChildOf(this._checkPointNode)) {\r\n                return\r\n            }\r\n            this._gameOver()\r\n        }\r\n    }\r\n\r\n\r\n    private _gameOver() {\r\n        this._isGameOver = true\r\n        director.emit(GameManager.InGameState.STOP_MOVING)\r\n        director.emit(GameManager.GameState.GAME_OVER)\r\n    }\r\n \r\n\r\n\r\n}"]}