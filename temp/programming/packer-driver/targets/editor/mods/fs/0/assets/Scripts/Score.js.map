{"version":3,"sources":["file:///D:/Tower-Run/Tower-Run/assets/Scripts/Score.ts"],"names":["_decorator","Component","find","Label","director","GameManager","ccclass","property","Score","start","_scoreLabel","update","dt","_distance","_scoreLabelPos","getWorldPosition","_scorePos","node","direction","subtract","length","normalize","setPosition","getPosition","add","multiplyScalar","scoreNum","Number","getComponent","string","slice","emit","InGameState","SCORE_ADDED","destroy"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAuBC,MAAAA,I,OAAAA,I;AAAWC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;;AACrDC,MAAAA,W,gBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;uBAGjBQ,K,WADZF,OAAO,CAAC,OAAD,C,yBAAR,MACaE,KADb,SAC2BP,SAD3B,CACqC;AAAA;AAAA;;AAAA,+CACL,IADK;;AAAA,kDAEF,IAFE;;AAAA,6CAGP,IAHO;;AAAA,6CAKL,GALK;AAAA;;AAOjCQ,QAAAA,KAAK,GAAG;AACJ,eAAKC,WAAL,GAAmBR,IAAI,CAAC,+BAAD,CAAvB;AACH;;AAGDS,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKC,SAAL,IAAkB,EAAtB,EAA0B;AACtB,iBAAKC,cAAL,GAAsB,KAAKJ,WAAL,CAAiBK,gBAAjB,EAAtB;AACA,iBAAKC,SAAL,GAAiB,KAAKC,IAAL,CAAUF,gBAAV,EAAjB;;AAEA,gBAAIG,SAAe,GAAG,KAAKJ,cAAL,CAAoBK,QAApB,CAA6B,KAAKH,SAAlC,CAAtB;;AACA,iBAAKH,SAAL,GAAiBK,SAAS,CAACE,MAAV,EAAjB;AACAF,YAAAA,SAAS,CAACG,SAAV;AAEA,iBAAKJ,IAAL,CAAUK,WAAV,CAAsB,KAAKL,IAAL,CAAUM,WAAV,GAAwBC,GAAxB,CAA4BN,SAAS,CAACO,cAAV,CAAyB,MAAMb,EAA/B,CAA5B,CAAtB;AAEH,WAVD,MAUO;AACH,gBAAIc,QAAgB,GAAGC,MAAM,CAAC,KAAKV,IAAL,CAAUW,YAAV,CAAuBzB,KAAvB,EAA+B0B,MAA/B,CAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAD,CAA7B,CADG,CAC4E;;AAC/E1B,YAAAA,QAAQ,CAAC2B,IAAT,CAAc;AAAA;AAAA,4CAAYC,WAAZ,CAAwBC,WAAtC,EAAmDP,QAAnD;AAEA,iBAAKT,IAAL,CAAUiB,OAAV;AAEH;AAEJ;;AA/BgC,O","sourcesContent":["\r\nimport { _decorator, Component, Node, Vec3, find, log, Label, director } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Score')\r\nexport class Score extends Component {\r\n    private _scoreLabel: Node = null!\r\n    private _scoreLabelPos: Vec3 = null!\r\n    private _scorePos: Vec3 = null!\r\n\r\n    private _distance: number = 100\r\n\r\n    start() {\r\n        this._scoreLabel = find('Canvas/UI/ScoreUI/score_label')!\r\n    }\r\n\r\n\r\n    update(dt: number) {\r\n        if (this._distance >= 30) {\r\n            this._scoreLabelPos = this._scoreLabel.getWorldPosition()\r\n            this._scorePos = this.node.getWorldPosition()\r\n\r\n            let direction: Vec3 = this._scoreLabelPos.subtract(this._scorePos)\r\n            this._distance = direction.length()\r\n            direction.normalize()\r\n\r\n            this.node.setPosition(this.node.getPosition().add(direction.multiplyScalar(650 * dt)))\r\n        \r\n        } else {\r\n            let scoreNum: number = Number(this.node.getComponent(Label)!.string.slice(-4)) // 获取当前的分数\r\n            director.emit(GameManager.InGameState.SCORE_ADDED, scoreNum)\r\n\r\n            this.node.destroy()\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]}