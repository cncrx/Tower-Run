{"version":3,"sources":["file:///D:/Tower-Run/Tower-Run/assets/Scripts/PlayerCtrl.ts"],"names":["_decorator","Component","director","view","GameManager","ccclass","property","PlayerCtrl","getVisibleSize","_visibleSize","width","start","node","on","_touchMove","InGameState","STOP_MOVING","_moving","START_MOVING","update","dt","pos","getWorldPosition","z","setWorldPosition","event","touchX","getUILocation","x","getPosition","_avgNum","setPosition","y"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAsBC,MAAAA,Q,OAAAA,Q;AAAsBC,MAAAA,I,OAAAA,I;;AACxDC,MAAAA,W,gBAAAA,W;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBN,U;;4BAGjBO,U,WADZF,OAAO,CAAC,YAAD,C,yBAAR,MACaE,UADb,SACgCN,SADhC,CAC0C;AAAA;AAAA;;AAAA,2CASX,IATW;;AAAA,gDAaTE,IAAI,CAACK,cAAL,EAbS;;AAAA,2CAcZ,KAAKC,YAAL,CAAkBC,KAAlB,GAA0B,CAdd;AAAA;;AAgBtCC,QAAAA,KAAK,GAAI;AACL,eAAKC,IAAL,CAAUC,EAAV,CAAa,YAAb,EAA2B,KAAKC,UAAhC,EAA4C,IAA5C;AAEAZ,UAAAA,QAAQ,CAACW,EAAT,CAAY;AAAA;AAAA,0CAAYE,WAAZ,CAAwBC,WAApC,EAAiD,MAAM;AACnD,iBAAKC,OAAL,GAAe,KAAf;AACH,WAFD,EAEG,IAFH;AAGAf,UAAAA,QAAQ,CAACW,EAAT,CAAY;AAAA;AAAA,0CAAYE,WAAZ,CAAwBG,YAApC,EAAkD,MAAM;AACpD,iBAAKD,OAAL,GAAe,IAAf;AACH,WAFD,EAEG,IAFH;AAKH;;AAGDE,QAAAA,MAAM,CAACC,EAAD,EAAa;AACf,cAAI,KAAKH,OAAT,EAAkB;AACd,gBAAII,GAAS,GAAG,KAAKT,IAAL,CAAUU,gBAAV,EAAhB;AACAD,YAAAA,GAAG,CAACE,CAAJ,IAAS,IAAIH,EAAb;AACA,iBAAKR,IAAL,CAAUY,gBAAV,CAA2BH,GAA3B;AACH;AACJ;;AAGOP,QAAAA,UAAU,CAACW,KAAD,EAAoB;AAClC,cAAIC,MAAc,GAAGD,KAAK,CAACE,aAAN,GAAsBC,CAA3C;AACA,cAAIP,GAAS,GAAG,KAAKT,IAAL,CAAUiB,WAAV,EAAhB,CAFkC,CAIlC;;AACA,cAAIH,MAAM,IAAI,KAAKI,OAAnB,EAA4B;AAAE;AAC1B,iBAAKlB,IAAL,CAAUmB,WAAV,CAAsB,CAAtB,EAAyBV,GAAG,CAACW,CAA7B,EAAgCX,GAAG,CAACE,CAApC;AAEH,WAHD,MAGO,IAAIG,MAAM,IAAI,KAAKI,OAAL,GAAe,CAA7B,EAAgC;AAAE;AACrC,iBAAKlB,IAAL,CAAUmB,WAAV,CAAsB,CAAC,CAAvB,EAA0BV,GAAG,CAACW,CAA9B,EAAiCX,GAAG,CAACE,CAArC;AAEH,WAHM,MAGA,IAAIG,MAAM,IAAI,KAAKI,OAAf,IAA0BJ,MAAM,IAAI,KAAKI,OAAL,GAAe,CAAvD,EAA0D;AAAE;AAC/D,iBAAKlB,IAAL,CAAUmB,WAAV,CAAsB,CAAtB,EAAyBV,GAAG,CAACW,CAA7B,EAAgCX,GAAG,CAACE,CAApC;AACH;AAEJ;;AAtDqC,O","sourcesContent":["\r\nimport { _decorator, Component, Node, log, director, EventTouch, view, Size, Vec3 } from 'cc';\r\nimport { GameManager } from './GameManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('PlayerCtrl')\r\nexport class PlayerCtrl extends Component {\r\n    \r\n\r\n    // read player and block's skin,\r\n    // and then apply it\r\n    // or though localStore\r\n    // private _applySkin()\r\n\r\n\r\n    private _moving: boolean = true\r\n    \r\n    // 将设备分辨率宽度分成三份，实现左中右 移动的操作\r\n    // a < avgNum*2 < b，触摸 x 轴坐标在 a 区域，向左移动 1 单位，坐标在 avgNum 区域移回到中间，b 反之\r\n    private _visibleSize: Size = view.getVisibleSize()\r\n    private _avgNum: number = this._visibleSize.width / 3\r\n\r\n    start () {\r\n        this.node.on('touch-move', this._touchMove, this)\r\n\r\n        director.on(GameManager.InGameState.STOP_MOVING, () => {\r\n            this._moving = false\r\n        }, this)\r\n        director.on(GameManager.InGameState.START_MOVING, () => {\r\n            this._moving = true\r\n        }, this)\r\n\r\n        \r\n    }\r\n\r\n\r\n    update(dt: number) {\r\n        if (this._moving) {\r\n            let pos: Vec3 = this.node.getWorldPosition()\r\n            pos.z += 2 * dt\r\n            this.node.setWorldPosition(pos)\r\n        }\r\n    }\r\n\r\n\r\n    private _touchMove(event: EventTouch) {\r\n        let touchX: number = event.getUILocation().x\r\n        let pos: Vec3 = this.node.getPosition()\r\n        \r\n        // _avgNum: 720\r\n        if (touchX <= this._avgNum) { // [0, 240]\r\n            this.node.setPosition(1, pos.y, pos.z)\r\n\r\n        } else if (touchX >= this._avgNum * 2) { // [480, 720]\r\n            this.node.setPosition(-1, pos.y, pos.z)\r\n\r\n        } else if (touchX >= this._avgNum && touchX <= this._avgNum * 2) { // [240, 480]\r\n            this.node.setPosition(0, pos.y, pos.z)\r\n        }\r\n        \r\n    }\r\n\r\n}"]}